@import '../variables.scss';

@mixin min($breakpoint, $max: 'null') {
  @if $max == 'null' {
    @media only screen and (min-width: #{$breakpoint}) {
      @content;
    }
  } @else {
    @media only screen and (min-width: #{$breakpoint}) and (max-width: #{$max}) {
      @content;
    }
  }
}

@function get-breakpoint($breakpoint) {
  @return map-get($breakpoints, $breakpoint);
}

@function container($container-size, $true-val: false) {
  @return map-get($container-sizes, $container-size);
}

.container {
  padding-right: 1rem;
  padding-left: 1rem;

  &:not(.is-fluid) {
    margin: 0 auto;

    @each $breakpoint, $container-size in $container-sizes {
      @include min(#{get-breakpoint(#{$breakpoint})}) {
        width: 100%;
        max-width: container(#{$breakpoint});
      }
    }
  }
}

@each $breakpoint, $container-size in $container-sizes {
  .container-#{$breakpoint} {
    margin: 0 auto;
    padding-right: 1rem;
    padding-left: 1rem;
    width: 100%;

    $i: index($container-sizes, $breakpoint $container-size);

    @for $j from $i through length($container-sizes) {
      @include min(#{get-breakpoint(nth(nth($container-sizes, $j), 1))}) {
        max-width: container(#{nth(nth($container-sizes, $j), 1)});
      }
    }
  }
}
